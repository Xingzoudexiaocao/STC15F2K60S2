C51 COMPILER V9.00   MAIN                                                                  04/22/2019 15:54:29 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /************************************************************
   2          功能描述：单片机12864液晶显示 
   3          ************************************************************/
   4          #include"stc15fxxxx.h"
   5          #include<stdlib.h>
   6          unsigned char code dis[]={0x3f,0x06,0x5b,0x4f,0x6d,0x7d,0x07,0x7f,0x6f};
   7          
   8          #define MAIN_Fosc                   11059200L       //主时钟,晶振频率不同的直接在这里修改频率
   9          #define serial_one_read_max         40              //定义缓存区的长度
  10          #define serial_one_baud_rate        9600L           //波特率,只需在这里修改波特率
  11          #define Timer1_Reload               (65536UL -(MAIN_Fosc / 4 / serial_one_baud_rate))    //用定时器1做波特
             -率发生器，计算定时器1的重装值    
  12          #define u8 unsigned char
  13          
  14          /*************变量定义****************/
  15          u8  serial_one_read_data[serial_one_read_max];  //定义串口接受数据缓存区
  16          u8  serial_one_read_count=0;                    //接受数据的个数
  17          
  18          unsigned char LCD_cache[9];
  19          bit  delay_1ms(u16 x);
  20          void delay(void);
  21          bit lcd_busy(void);
  22          bit  lcd_pos(u8 X,u8 Y);
  23          bit lcd_init();
  24          bit write_str(u8 *c);
  25          unsigned char RX_dat_flag=0;
  26          unsigned char time0_num=0;
  27          /************************************************************
  28          功能描述：在LCD12864上指定位置显示指定内容
  29          入口参数：无
  30          出口参数：无
  31          ************************************************************/
  32          void Timer0Init(void)           //50毫秒@11.0592MHz
  33          {
  34   1              AUXR &= 0x7F;           //定时器时钟12T模式
  35   1              TMOD &= 0xF0;           //设置定时器模式
  36   1              TL0 = 0x00;             //设置定时初值
  37   1              TH0 = 0x4C;             //设置定时初值
  38   1              TF0 = 0;                //清除TF0标志
  39   1              TR0 = 1;                //定时器0开始计时
  40   1              ET0 = 1;
  41   1      }
  42          
  43          //初始化串口1
  44          void serial_one_init()
  45          {
  46   1          SCON |= 0x40;          //8位数据
  47   1          P_SW1 &=  ~0xc0;       //UART1 使用P30 P31口  默认
  48   1          TR1 = 0;               //关闭定时器
  49   1          AUXR &= ~0x01;      //S1 BRT Use Timer1;
  50   1          TMOD &= ~(1<<6);    //Timer1 set As Timer
  51   1          TMOD &= ~0x30;      //Timer1_16bitAutoReload;2
  52   1          AUXR |=  (1<<6);    //Timer1 set as 1T mode
  53   1          TH1 = (u8)(Timer1_Reload >> 8);             //定时器高八位赋初值
  54   1          TL1 = (u8)Timer1_Reload;                    //定时器低八位赋初值
C51 COMPILER V9.00   MAIN                                                                  04/22/2019 15:54:29 PAGE 2   

  55   1          TR1 = 1;    //打开定时器
  56   1          PS = 1;     //高优先级中断
  57   1          REN = 1;    //允许接收
  58   1          ES  = 1;    //允许中断
  59   1          EA = 1;     //允许全局中断
  60   1      }
  61          
  62          //串口1发送一个字节
  63          void serial_one_send_byte(u8 dat)
  64          {
  65   1          SBUF = dat;   //发送数据
  66   1          while(!TI);   //等待发送完毕
  67   1          TI=0;         //清除发送标志
  68   1      }
  69          
  70          //串口1发送字符串
  71          void serial_one_send_string(u8 *dat)
  72          {
  73   1          while(*dat)
  74   1              serial_one_send_byte(*dat++);
  75   1      }
  76          
  77          //串口1发送指定指定长度数据
  78          void serial_one_send_length_string(u8 *dat,u8 length)
  79          {
  80   1          u8 i=0;
  81   1          for(;i < length;i++)
  82   1              serial_one_send_byte(dat[i]);
  83   1      }
  84          
  85          void Delay10ms()                //@11.0592MHz
  86          {
  87   1              unsigned char i, j;
  88   1      
  89   1              i = 108;
  90   1              j = 145;
  91   1              do
  92   1              {
  93   2                      while (--j);
  94   2              } while (--i);
  95   1      }
  96          void main()
  97          {
  98   1          lcd_init();                         //LCD初始化
  99   1              delay_1ms(3);                           //延时
 100   1              lcd_pos(0,1);                           //指定显示位置
 101   1              write_str("GPS");       //显示字符串
 102   1              lcd_pos(0,3);                           //指定显示位置
 103   1              write_str("北京时间");  //显示字符串
 104   1              lcd_pos(1,2);                           //指定显示位置
 105   1              write_str("自动授时");  //显示字符串
 106   1              lcd_pos(3,1);                           //指定显示位置
 107   1              write_str("――牧童工作室");
 108   1      
 109   1              P0&=0xaf;
 110   1              P2=P2&0x1f|0xa0;
 111   1          serial_one_init();//串口初始化
 112   1              Timer0Init();
 113   1          while(1)
 114   1          {
 115   2                      if(time0_num == 0)
 116   2                      {
C51 COMPILER V9.00   MAIN                                                                  04/22/2019 15:54:29 PAGE 3   

 117   3                              P10=0;
 118   3                              LCD_cache[0]=serial_one_read_data[0];
 119   3                              LCD_cache[1]=serial_one_read_data[1];
 120   3                              LCD_cache[2]=':';
 121   3                              LCD_cache[3]=serial_one_read_data[2];
 122   3                              LCD_cache[4]=serial_one_read_data[3];
 123   3                              LCD_cache[5]=':';
 124   3                              LCD_cache[6]=serial_one_read_data[4];
 125   3                              LCD_cache[7]=serial_one_read_data[5];
 126   3                              LCD_cache[8]='\0';
 127   3      
 128   3                              LCD_cache[0]=(LCD_cache[0]-48)*10+LCD_cache[1]-48;        //小时十位
 129   3                              LCD_cache[0]=LCD_cache[0]+8;
 130   3      
 131   3                              if(LCD_cache[0]==24)
 132   3                                       LCD_cache[0]=0;
 133   3                              else if(LCD_cache[0]==25)
 134   3                                       LCD_cache[0]=1;
 135   3                               else if(LCD_cache[0]==26)
 136   3                                       LCD_cache[0]=2;
 137   3                               else if(LCD_cache[0]==27)
 138   3                                       LCD_cache[0]=3;
 139   3                               else if(LCD_cache[0]==28)
 140   3                                       LCD_cache[0]=4;
 141   3                               else if(LCD_cache[0]==29)
 142   3                                       LCD_cache[0]=5;
 143   3                               else if(LCD_cache[0]==30)
 144   3                                       LCD_cache[0]=6;
 145   3                               else if(LCD_cache[0]==31)
 146   3                                       LCD_cache[0]=7;
 147   3                               else if(LCD_cache[0]==32)
 148   3                                       LCD_cache[0]=8;
 149   3      
 150   3                              LCD_cache[1]=LCD_cache[0]%10+48;
 151   3                              LCD_cache[0]=LCD_cache[0]/10+48;        
 152   3                      }
 153   2                      if(time0_num==5)
 154   2                      {
 155   3                              P10=1;
 156   3                              lcd_pos(2,2);                           //指定显示位置
 157   3                              write_str(LCD_cache);   //显示字符串
 158   3                      }
 159   2              if(RX_dat_flag == 0)//如果接受到数据
 160   2              {
 161   3                  serial_one_send_length_string(serial_one_read_data,serial_one_read_count);//发送接收到的数据
 162   3                  serial_one_read_count = 0;//接收计数清0
 163   3                              Delay10ms();
 164   3              }
 165   2          }
 166   1      }
 167          unsigned char num=0;
 168          /********************* 串口1中断函数************************/
 169          void UART1_int (void) interrupt 4
 170          {
 171   1              unsigned char cache=0x00;
 172   1          if(RI)
 173   1          {
 174   2              RI = 0;//清除接受标志
 175   2                      cache = SBUF;
 176   2                      if(cache=='L')
 177   2                      {
 178   3                              RX_dat_flag=1;
C51 COMPILER V9.00   MAIN                                                                  04/22/2019 15:54:29 PAGE 4   

 179   3                      }
 180   2                      if((RX_dat_flag==1)&&(cache==','))
 181   2                      {
 182   3                              RX_dat_flag=2;
 183   3                              cache=0;
 184   3                      }
 185   2                      if((RX_dat_flag==2)&&(cache==','))
 186   2                      {
 187   3                              RX_dat_flag=3;
 188   3                              cache=0;
 189   3                      }
 190   2                      if((RX_dat_flag==3)&&(cache==','))
 191   2                      {
 192   3                              RX_dat_flag=4;
 193   3                              cache=0;
 194   3                      }
 195   2                      if((RX_dat_flag==4)&&(cache==','))
 196   2                      {
 197   3                              RX_dat_flag=5;
 198   3                              cache=0;
 199   3                      }
 200   2                      if((RX_dat_flag==5)&&(cache==','))
 201   2                      {
 202   3                              RX_dat_flag=6;
 203   3                      }
 204   2      
 205   2                      if(RX_dat_flag==7)      
 206   2                      {
 207   3                              num++;
 208   3                              serial_one_read_data[serial_one_read_count]=cache;
 209   3                              serial_one_read_count++;
 210   3                      }
 211   2                      if(RX_dat_flag==6)
 212   2                              RX_dat_flag=7;
 213   2      
 214   2      
 215   2                      if(num>5)
 216   2                      {
 217   3                              num=0;
 218   3                              RX_dat_flag=0;
 219   3                      }
 220   2          }
 221   1      }
 222          void TIME0 (void) interrupt 1
 223          {
 224   1              if(time0_num>18)
 225   1                      time0_num=0;
 226   1              else
 227   1                      time0_num++;
 228   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    600    ----
   CONSTANT SIZE    =     46    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     53       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
