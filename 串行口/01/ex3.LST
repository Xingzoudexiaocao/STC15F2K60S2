C51 COMPILER V9.00   EX3                                                                   04/21/2019 17:04:07 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EX3
OBJECT MODULE PLACED IN ex3.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE ex3.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //**********************************************
   2          //STC15F2K60S2串口通信程序,将串口接受到的数据从串口发出去
   3          //采用11.0592M晶振,波特率9600
   4          //*********************************************
   5          
   6          #include <STC15F2K60S2.H>
   7          
   8          /*************常量定义****************/
   9          
  10          #define MAIN_Fosc                   11059200L       //主时钟,晶振频率不同的直接在这里修改频率
  11          #define serial_one_read_max         32              //定义缓存区的长度
  12          #define serial_one_baud_rate        9600L           //波特率,只需在这里修改波特率
  13          #define Timer1_Reload               (65536UL -(MAIN_Fosc / 4 / serial_one_baud_rate))    //用定时器1做波特
             -率发生器，计算定时器1的重装值    
  14          #define u8 unsigned char
  15          
  16          /*************变量定义****************/
  17          u8  serial_one_read_data[serial_one_read_max];  //定义串口接受数据缓存区
  18          u8  serial_one_read_count=0;                    //接受数据的个数
  19          
  20          //初始化串口1
  21          void serial_one_init()
  22          {
  23   1          SCON |= 0x40;          //8位数据
  24   1          P_SW1 &=  ~0xc0;       //UART1 使用P30 P31口  默认
  25   1          TR1 = 0;               //关闭定时器
  26   1          AUXR &= ~0x01;      //S1 BRT Use Timer1;
  27   1          TMOD &= ~(1<<6);    //Timer1 set As Timer
  28   1          TMOD &= ~0x30;      //Timer1_16bitAutoReload;2
  29   1          AUXR |=  (1<<6);    //Timer1 set as 1T mode
  30   1          TH1 = (u8)(Timer1_Reload >> 8);             //定时器高八位赋初值
  31   1          TL1 = (u8)Timer1_Reload;                    //定时器低八位赋初值
  32   1          TR1 = 1;    //打开定时器
  33   1          PS = 1;     //高优先级中断
  34   1          REN = 1;    //允许接收
  35   1          ES  = 1;    //允许中断
  36   1          EA = 1;     //允许全局中断
  37   1      }
  38          
  39          //串口1发送一个字节
  40          void serial_one_send_byte(u8 dat)
  41          {
  42   1          SBUF = dat;   //发送数据
  43   1          while(!TI);   //等待发送完毕
  44   1          TI=0;         //清除发送标志
  45   1      }
  46          
  47          //串口1发送字符串
  48          void serial_one_send_string(u8 *dat)
  49          {
  50   1          while(*dat)
  51   1              serial_one_send_byte(*dat++);
  52   1      }
  53          
  54          //串口1发送指定指定长度数据
C51 COMPILER V9.00   EX3                                                                   04/21/2019 17:04:07 PAGE 2   

  55          void serial_one_send_length_string(u8 *dat,u8 length)
  56          {
  57   1          u8 i=0;
  58   1          for(;i < length;i++)
  59   1              serial_one_send_byte(dat[i]);
  60   1      }
  61          
  62          void Delay10ms()                //@11.0592MHz
  63          {
  64   1              unsigned char i, j;
  65   1      
  66   1              i = 108;
  67   1              j = 145;
  68   1              do
  69   1              {
  70   2                      while (--j);
  71   2              } while (--i);
  72   1      }
  73          void main()
  74          {
  75   1          
  76   1          serial_one_init();//串口初始化
  77   1          while(1)
  78   1          {
  79   2              if(serial_one_read_count > 0)//如果接受到数据
  80   2              {
  81   3      
  82   3                  serial_one_send_length_string(serial_one_read_data,serial_one_read_count);//发送接收到的数据
  83   3                  serial_one_read_count = 0;//接收计数清0
  84   3                              Delay10ms();
  85   3              }
  86   2          }
  87   1      }
  88          
  89          /********************* 串口1中断函数************************/
  90          void UART1_int (void) interrupt 4
  91          {
  92   1          if(RI)
  93   1          {
  94   2              RI = 0;//清除接受标志
  95   2              serial_one_read_data[serial_one_read_count] = SBUF;//将数据存入数组
  96   2              if(++serial_one_read_count > serial_one_read_max)    //避免溢出
  97   2                  serial_one_read_count = 0;
  98   2          }
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    195    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
